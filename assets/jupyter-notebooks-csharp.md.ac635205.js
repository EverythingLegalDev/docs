import{_ as n}from"./jupyter-csharp.d602be32.js";import{_ as s,c as a,o,b as e,e as t}from"./app.da189b1e.js";const le='{"title":"C# Jupyter Notebooks","description":"","frontmatter":{"slug":"jupyter-notebooks-csharp","title":"C# Jupyter Notebooks"},"headers":[{"level":3,"title":"Generate C# Jupyter Notebooks","slug":"generate-c-jupyter-notebooks"},{"level":2,"title":"Setup Jupyter for C# locally","slug":"setup-jupyter-for-c-locally"},{"level":2,"title":"Running JupyterLab","slug":"running-jupyterlab"},{"level":2,"title":"Example generated notebook","slug":"example-generated-notebook"},{"level":3,"title":"Visualize the data","slug":"visualize-the-data"},{"level":2,"title":"Try it out yourself using MyBinder with generated notebooks","slug":"try-it-out-yourself-using-mybinder-with-generated-notebooks"}],"relativePath":"jupyter-notebooks-csharp.md","lastUpdated":1650017944145}',l={},r=e("p",null,[e("img",{src:n,alt:""})],-1),i=e("p",null,"Jupyter Commands lets you generate C# Jupyter Notebooks for calling ServiceStack APIs in a single command.",-1),c=e("iframe",{width:"896",height:"525",src:"https://www.youtube.com/embed/vt92pbet5bY",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),p=e("p",null,[t("All command line utils used are available in the latest "),e("a",{href:"/dotnet-tool"},"dotnet tool"),t(" which can be installed from:")],-1),u=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"dotnet tool install --global x")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),d=e("p",null,"Or if you had a previous version installed, update with:",-1),h=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"dotnet tool update -g x")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),k=e("h3",{id:"generate-c-jupyter-notebooks",tabindex:"-1"},[t("Generate C# Jupyter Notebooks "),e("a",{class:"header-anchor",href:"#generate-c-jupyter-notebooks","aria-hidden":"true"},"#")],-1),g=e("p",null,[t("Use "),e("code",null,"x jupyter-csharp"),t(" to display different usage examples for generating C# Jupyter Notebooks:")],-1),y=e("div",{class:"language-"},[e("pre",null,[e("code",null,`Usage: x jupyter-csharp <base-url>
       x jupyter-csharp <base-url> <request>
       x jupyter-csharp <base-url> <request> {js-object}
       x jupyter-csharp <base-url> <request> < body.json

Options:
 -out <file>            Save notebook to file
 -include <pattern>     Include Types DTOs pattern
`)])],-1),w=e("p",null,[t("The same syntax for invoking APIs with the "),e("a",{href:"/post-command"},"Post Command HTTP Utils"),t(" can also be used to generate C# Jupyter Notebooks, e.g:")],-1),b=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,[t("x jupyter-csharp "),e("a",{href:"https://techstacks.io",target:"_blank",rel:"noopener noreferrer"},"https://techstacks.io"),t(` FindTechStacks "{Ids:[1,2,3],VendorName:'Google',Take:5}"`)])])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),v=e("p",null,"Output:",-1),m=e("div",{class:"language-"},[e("pre",null,[e("code",null,`Saved to: techstacks.io-FindTechStacks.ipynb
`)])],-1),f=e("div",{class:"info custom-block"},[e("p",{class:"custom-block-title"},"INFO"),e("p",null,[t("Jupyter Notebooks can also be created with the API Explorer UI at "),e("a",{href:"https://apps.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"apps.servicestack.net")])],-1),_=e("h2",{id:"setup-jupyter-for-c-locally",tabindex:"-1"},[t("Setup Jupyter for C# locally "),e("a",{class:"header-anchor",href:"#setup-jupyter-for-c-locally","aria-hidden":"true"},"#")],-1),x=e("p",null,"To get working with JupyterLabs to run locally with a C# kernel, there are a few things you'll need to have installed.",-1),j=e("ul",null,[e("li",null,"Latest dotnet 5.0+ SDK"),e("li",null,"Python 3.7+ with pip")],-1),T=e("p",null,"With both dotnet SDK and Python installed, you can then install JupyterLab, Dotnet Interactive and register the dotnet kernels with the following commands.",-1),S=e("div",{class:"language-bash"},[e("pre",null,[e("code",null,[e("span",{class:"token comment"},"# Install jupyterlab to default Python interpreter"),t(`
pip `),e("span",{class:"token function"},"install"),t(` jupyterlab
`),e("span",{class:"token comment"},"# Install Dotnet Interactive dotnet tool"),t(`
dotnet tool `),e("span",{class:"token function"},"install"),t(` -g Microsoft.dotnet-interactive
`),e("span",{class:"token comment"},"# Get Dotnet Interactive to register kernels with Jupyter  "),t(`
dotnet interactive jupyter `),e("span",{class:"token function"},"install"),t(`
`)])])],-1),M=e("p",null,"To verify these have been installed successfully, you can list the currently registered kernels using the command.",-1),N=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"jupyter kernelspec list")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),C=e("p",null,[t("This should list "),e("code",null,".net-csharp"),t(" as one of the kernels which is what the C# notebooks will use.")],-1),V=e("h2",{id:"running-jupyterlab",tabindex:"-1"},[t("Running JupyterLab "),e("a",{class:"header-anchor",href:"#running-jupyterlab","aria-hidden":"true"},"#")],-1),B=e("p",null,"With everything setup, navigate to a local directory with your notebooks and run:",-1),D=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"jupyter-lab")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),J=e("p",null,[t("The context of where this command is run from matter as JupyterLab will mount list files in the same directory is was run, so make sure your running the "),e("code",null,"jupyter-lab"),t(" command from where your notebooks are located or where you new notebooks to be saved.")],-1),P=e("h2",{id:"example-generated-notebook",tabindex:"-1"},[t("Example generated notebook "),e("a",{class:"header-anchor",href:"#example-generated-notebook","aria-hidden":"true"},"#")],-1),I=e("p",null,"From your notebook directory that JupyterLab is using, open a new command prompt/terminal and run:",-1),L=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,[t("x jupyter-csharp "),e("a",{href:"https://covid-vac-watch.netcore.io",target:"_blank",rel:"noopener noreferrer"},"https://covid-vac-watch.netcore.io"),t(" QueryVaccinationRates")])])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),E=e("p",null,[t("This will generate the file "),e("code",null,"covid_vac_watch.netcore.io-QueryVaccinationRates.ipynb"),t(" in that directory. This file has everything that is needed to call the "),e("code",null,"QueryVaccinationRates"),t(" service and display data in the response.")],-1),G=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/jupyter/jupyter-lab-csharp-example.png",alt:""})],-1),A=e("h3",{id:"visualize-the-data",tabindex:"-1"},[t("Visualize the data "),e("a",{class:"header-anchor",href:"#visualize-the-data","aria-hidden":"true"},"#")],-1),R=e("p",null,[t("These generated notebooks are designed to be a starting point with all the data plumbing setup done for you. Taking this example further, we can visualize the data using "),e("a",{href:"https://plotly.net/",target:"_blank",rel:"noopener noreferrer"},"Plotly.NET"),t(", a NuGet library that generates plotly.js visuals using .NET. Run at least the first two cells and then add a new cell at the bottom of the generated notebook with the following code.")],-1),H=e("div",{class:"language-csharp"},[e("pre",null,[e("code",null,[e("span",{class:"token preprocessor property"},"#r "),e("span",{class:"token string"},'"nuget: Plotly.NET, 2.0.0-preview.6"'),t(`
`),e("span",{class:"token preprocessor property"},"#r "),e("span",{class:"token string"},'"nuget: Plotly.NET.Interactive, 2.0.0-preview.6"'),t(`

`),e("span",{class:"token keyword"},"using"),t(),e("span",{class:"token namespace"},[t("Plotly"),e("span",{class:"token punctuation"},"."),t("NET")]),e("span",{class:"token punctuation"},";"),t(`

`),e("span",{class:"token class-name"},[e("span",{class:"token keyword"},"var")]),t(" xData "),e("span",{class:"token operator"},"="),t(" response"),e("span",{class:"token punctuation"},"."),t("Results"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"Select"),e("span",{class:"token punctuation"},"("),t("x "),e("span",{class:"token operator"},"=>"),t(" x"),e("span",{class:"token punctuation"},"."),t("Date"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"ToList"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),t(`
`),e("span",{class:"token class-name"},[e("span",{class:"token keyword"},"var")]),t(" yData "),e("span",{class:"token operator"},"="),t(" response"),e("span",{class:"token punctuation"},"."),t("Results"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"Select"),e("span",{class:"token punctuation"},"("),t("x "),e("span",{class:"token operator"},"=>"),t(" x"),e("span",{class:"token punctuation"},"."),t("DailyVaccinations "),e("span",{class:"token operator"},"=="),t(),e("span",{class:"token keyword"},"null"),t(),e("span",{class:"token punctuation"},"?"),t(),e("span",{class:"token number"},"0"),t(),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token punctuation"},"("),e("span",{class:"token keyword"},"decimal"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"("),t("x"),e("span",{class:"token punctuation"},"."),t("DailyVaccinations"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"ToList"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),t(`

`),e("span",{class:"token class-name"},[t("GenericChart"),e("span",{class:"token punctuation"},"."),t("GenericChart")]),t(" chart "),e("span",{class:"token operator"},"="),t(" Chart"),e("span",{class:"token punctuation"},"."),e("span",{class:"token generic-method"},[e("span",{class:"token function"},"Point"),e("span",{class:"token generic class-name"},[e("span",{class:"token punctuation"},"<"),t("DateTime"),e("span",{class:"token punctuation"},","),e("span",{class:"token keyword"},"decimal"),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token keyword"},"string"),e("span",{class:"token punctuation"},">")])]),e("span",{class:"token punctuation"},"("),e("span",{class:"token named-parameter punctuation"},"x"),e("span",{class:"token punctuation"},":"),t(" xData"),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token named-parameter punctuation"},"y"),e("span",{class:"token punctuation"},":"),t(" yData"),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token named-parameter punctuation"},"Name"),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token string"},'""'),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),t(`
chart
    `),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"WithTraceName"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"Daily Vaccinations"'),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token boolean"},"true"),e("span",{class:"token punctuation"},")"),t(`
    `),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"WithX_AxisStyle"),e("span",{class:"token punctuation"},"("),e("span",{class:"token named-parameter punctuation"},"title"),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token string"},'"Vaccinations"'),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token named-parameter punctuation"},"Showgrid"),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token boolean"},"false"),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token named-parameter punctuation"},"Showline"),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token boolean"},"true"),e("span",{class:"token punctuation"},")"),t(`
    `),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"WithY_AxisStyle"),e("span",{class:"token punctuation"},"("),e("span",{class:"token named-parameter punctuation"},"title"),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token string"},'"Date"'),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token named-parameter punctuation"},"Showgrid"),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token boolean"},"false"),e("span",{class:"token punctuation"},","),t(),e("span",{class:"token named-parameter punctuation"},"Showline"),e("span",{class:"token punctuation"},":"),t(),e("span",{class:"token boolean"},"true"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),t(`
`),e("span",{class:"token function"},"display"),e("span",{class:"token punctuation"},"("),t("chart"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";"),t(`
`)])])],-1),z=e("p",null,"The code above does several things.",-1),O=e("ul",null,[e("li",null,[t("Import the 2 required "),e("a",{href:"http://Plotly.NET",target:"_blank",rel:"noopener noreferrer"},"Plotly.NET"),t(" NuGet dependencies.")]),e("li",null,[t("Declares "),e("code",null,"using"),t(" statement.")]),e("li",null,"Transforms response data into 2 equal list of primitive data."),e("li",null,[t("Generates a plot with "),e("code",null,"Date"),t(" on the X axis and "),e("code",null,"DailyVaccinations"),t(" on the Y axis.")])],-1),U=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/jupyter/jupyter-lab-visual-example.png",alt:""})],-1),q=e("h2",{id:"try-it-out-yourself-using-mybinder-with-generated-notebooks",tabindex:"-1"},[t("Try it out yourself using MyBinder with generated notebooks "),e("a",{class:"header-anchor",href:"#try-it-out-yourself-using-mybinder-with-generated-notebooks","aria-hidden":"true"},"#")],-1),W=e("p",null,[t("Another way to work with Jupyter, C# and ServiceStack generated notebooks is to do with via "),e("a",{href:"https://mybinder.org/",target:"_blank",rel:"noopener noreferrer"},"MyBinder"),t(". MyBinder is a free hosted service that gives you an isolated docker container to run your notebooks if you are just trying something out.")],-1),F=e("p",null,[e("a",{href:"https://mybinder.org/v2/gh/ServiceStack/jupyter-notebooks/HEAD",target:"_blank",rel:"noopener noreferrer"},[e("img",{src:"https://mybinder.org/badge_logo.svg",alt:"Binder"})])],-1),Q=e("ul",null,[e("li",null,[t("Click on the "),e("code",null,"Launch Binder"),t(" badge above and wait for it to launch into a Jupyter web UI (it can take a min or two sometimes)")]),e("li",null,[t("Goto "),e("code",null,"New"),t(" and select "),e("code",null,"Terminal"),t(".")]),e("li",null,[t("In the terminal use the ServiceStack "),e("code",null,"x"),t(" tool to generate a new C# notebook like before "),e("ul",null,[e("li",null,[e("code",null,"x jupyter-csharp https://covid-vac-watch.netcore.io QueryVaccinationRates")])])]),e("li",null,"Navigate back to Jupyter file explorer and see your generated notebook."),e("li",null,[t("Open the new notebook and "),e("strong",null,"run"),t(" the generated cells.")]),e("li",null,[t("Add a new cell with the same code for "),e("a",{href:"http://Plotly.NET",target:"_blank",rel:"noopener noreferrer"},"Plotly.NET"),t(" as above and run")])],-1),$=e("p",null,[e("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/jupyter/jupyter-mybinder-visual-example.png",alt:""})],-1),Y=[r,i,c,p,u,d,h,k,g,y,w,b,v,m,f,_,x,j,T,S,M,N,C,V,B,D,J,P,I,L,E,G,A,R,H,z,O,U,q,W,F,Q,$];function K(X,Z,ee,te,ne,se){return o(),a("div",null,Y)}var re=s(l,[["render",K]]);export{le as __pageData,re as default};
